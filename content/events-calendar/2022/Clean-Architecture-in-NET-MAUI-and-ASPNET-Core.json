{
  "title": "Clean Architecture in .NET MAUI and ASP.NET Core",
  "url": "/ssw/NETUG/Sydney.aspx",
  "thumbnail": "/images/thumbs/thumb-sydneyUG.jpg",
  "thumbnailDescription": "Sydney .NET User Group",
  "presenterName": "Matt Goldman",
  "presenterProfileUrl": "/people/matt-goldman",
  "startDateTime": "2022-11-16T07:00:00Z",
  "endDateTime": "2022-11-16T11:00:00Z",
  "startShowBannerDateTime": "2022-11-15T13:00:00Z",
  "endShowBannerDateTime": "2022-11-16T11:00:00Z",
  "liveStreamUrl": {
    "description": "Livestream",
    "url": "/live"
  },
  "calendarType": "User Groups",
  "city": "Sydney",
  "enabled": true,
  "category": "Other",
  "eventShortDescription": "<div class=\"ExternalClass9E05879398954486817C6597AAC4E35E\">November .NET User Group&#58; Clean Architecture in&#160;.NET MAUI and ASP.NET Core<br><br>We've heard a lot about how using .NET to build our UI applications lets us share code across our whole stack, but finding the best way to do this isn't straightforward. UI code and API code can sometimes seem at cross-purposes and it's not always obvious how using .NET code across your whole stack provides any advantages over using different technologies for your UI and API. It's easy to fall into the trap of underutilizing the right code-sharing&#160;techniques. Or, at the other extreme, butchering your architecture for the sake of sharing code.<br><br>In this talk, Matt Goldman (author of .NET MAUI in Action) will look at extending Clean Architecture to incorporate UIs built with .NET MAUI and Blazor. See sensible ways to write clean, testable, re-usable code that can be shared across the different layers of your solution, and across different solutions in your enterprise, to optimize efficiency and minimize duplication, without compromising the core principles of Clean Architecture. We'll also see how to avoid the common pitfalls of over-engineering or under-sharing.<br><br><p>You will walk away knowing how to make full-stack code shared with .NET a reality.<br>--<br></p>Join us in person&#160;from 6 pm in Sydney &amp; Melbourne,&#160;or 5&#160;pm in Brisbane&#58;<br>SSW Sydney \u2013 Live &#128308;<br>SSW Melbourne \u2013 Watch party &#127910;<br><p>SSW Brisbane \u2013 Watch party &#127910;<br></p></div>",
  "eventDescription": "<div class=\"ExternalClass4AB80460191C4D34A077C2FB0381A286\"><p>\u200bNovember .NET User Group&#58; Clean Architecture with .NET MAUI and ASP.NET Core</p>We've heard a lot about how using .NET to build our UI applications lets us share code across our whole stack, but finding the best way to do this isn't straightforward. UI code and API code can sometimes seem at cross-purposes and it's not always obvious how using .NET code across your whole stack provides any advantages over using different technologies for your UI and API. It's easy to fall into the trap of underutilizing the right code sharing techniques. Or, at the other extreme, butchering your architecture for the sake of sharing code.<br><br>In this talk, Matt Goldman (author of .NET MAUI in Action) will look at extending Clean Architecture to incorporate UIs built with .NET MAUI and Blazor. See sensible ways to write clean, testable, re-usable code that can be shared across the different layers of your solution, and across different solutions in your enterprise, to optimize efficiency and minimize duplication, without compromising the core principles of Clean Architecture. We'll also see how to avoid the common pitfalls of over-engineering or under-sharing.<br><br><p>You will walk away knowing how to make full-stack code shared with .NET a reality.<br></p></div>",
  "description": "November .NET User Group: Clean Architecture in\u00a0.NET MAUI and ASP.NET Core\n\nWe've heard a lot about how using .NET to build our UI applications lets us share code across our whole stack, but finding the best way to do this isn't straightforward. UI code and API code can sometimes seem at cross-purposes and it's not always obvious how using .NET code across your whole stack provides any advantages over using different technologies for your UI and API. It's easy to fall into the trap of underutilizing the right code-sharing\u00a0techniques. Or, at the other extreme, butchering your architecture for the sake of sharing code.\n\nIn this talk, Matt Goldman (author of .NET MAUI in Action) will look at extending Clean Architecture to incorporate UIs built with .NET MAUI and Blazor. See sensible ways to write clean, testable, re-usable code that can be shared across the different layers of your solution, and across different solutions in your enterprise, to optimize efficiency and minimize duplication, without compromising the core principles of Clean Architecture. We'll also see how to avoid the common pitfalls of over-engineering or under-sharing.\n\nYou will walk away knowing how to make full-stack code shared with .NET a reality.\n\n--\n\nJoin us in person\u00a0from 6 pm in Sydney & Melbourne,\u00a0or 5\u00a0pm in Brisbane:\n\nSSW Sydney \u2013 Live \ud83d\udd34\n\nSSW Melbourne \u2013 Watch party \ud83c\udfa6\n\nSSW Brisbane \u2013 Watch party \ud83c\udfa6",
  "showOnPowerSessions": "No",
  "hasVideo": false,
  "youTubeId": "K9ryHflmQJE",
  "externalPresenters": [
    {
      "LookupId": 7,
      "LookupValue": "Matt Goldman"
    }
  ],
  "presenterList": [
    {
      "presenter": "content/presenters/matt-goldman.mdx"
    }
  ]
}