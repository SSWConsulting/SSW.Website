name: Deploy

inputs:
  AZURE_CLIENT_ID:
    description: client id for OIDC
    required: true
  AZURE_TENANT_ID:
    description: tenant id
    required: true
  AZURE_SUBSCRIPTION_ID:
    description: subscription id
    required: true
  AZURE_RESOURCE_GROUP:
    description: resource group name
    required: true
  APP_SERVICE_NAME:
    description: appservice name
    required: true
  slot_name:
    description: app service slot name
    default: production
    required: false
  ACR_LOGIN_SERVER:
    description: acr server
    required: true
  IMAGE_NAME:
    description: Name of the image
    required: true
  AZURE_SERVICE_PRINCIPAL_OBJECT_ID:
    description: Object Id of Service Principal
    required: true

outputs:
  url:
    description: URL to the environment that was deployed to
    value: ${{ steps.get-app-service-url.outputs.webapp-url }}

runs:
  using: "composite"
  steps:
    - name: Azure CLI - Login
      uses: azure/login@v1
      with:
        client-id: ${{ inputs.AZURE_CLIENT_ID }}
        tenant-id: ${{ inputs.AZURE_TENANT_ID }}
        subscription-id: ${{ inputs.AZURE_SUBSCRIPTION_ID }}

    - name: AppService - Create slot
      shell: pwsh
      id: create-slot
      if: github.event_name == 'pull_request'
      run: |
        # create the environment
        az deployment group create `
          --name ${{ inputs.slot_name }}-$timestamp `
          --resource-group ${{ inputs.AZURE_RESOURCE_GROUP }} `
          --template-file ./infra/create-pr-environment.bicep `
          --parameters `
            "slotName=${{ inputs.slot_name }}" `
            "appServiceName=${{ inputs.APP_SERVICE_NAME }}" `
            "acrLoginServer=${{ inputs.ACR_LOGIN_SERVER }}" `
            "servicePrincipalObjectId=${{ inputs.AZURE_SERVICE_PRINCIPAL_OBJECT_ID }}" `
          -o none
        Write-Host '✅ PR - Bicep deployed'

    - name: AppService - Get slot URL
      shell: pwsh
      id: get-app-service-url
      run: |
        if ("${{ inputs.slot_name }}" -ieq "production")
        {
          echo "webapp-url=https://${{ inputs.APP_SERVICE_NAME }}.azurewebsites.net" >> $env:GITHUB_OUTPUT
          Write-Host '⏩ we know the production url already'
          Return 0;
        }

        $url = az webapp config hostname list `
          --resource-group ${{ inputs.AZURE_RESOURCE_GROUP }} `
          --webapp-name ${{ inputs.APP_SERVICE_NAME }} `
          --slot ${{ inputs.slot_name }} `
          --query "[0].name" `
          --output tsv

        echo "webapp-url=https://$url" >> $env:GITHUB_OUTPUT

    - name: AppService - Deploy
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ inputs.APP_SERVICE_NAME }}
        slot-name: ${{ inputs.slot_name }}
        images: ${{ inputs.ACR_LOGIN_SERVER }}/${{ inputs.IMAGE_NAME }}:${{ inputs.slot_name }}
