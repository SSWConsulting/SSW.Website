name: Template - Lighthouse Insights

on:
  workflow_call:
    inputs:
      url:
        type: string
        required: true

defaults:
  run:
    shell: pwsh

jobs:
  lighthouse-insights:
    name: Run Lighthouse Insights
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./.github
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
      - name: Wait for Slot to be available
        uses: jtalk/url-health-check-action@v2
        with:
          url: ${{ inputs.url }}
          max-attempts: 5
          retry-delay: 40s

      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./.lighthouserc.json
          urls: |
            ${{ inputs.url }}
            ${{ inputs.url }}/articles
            ${{ inputs.url }}/company/about-us
            ${{ inputs.url }}/company/clients
            ${{ inputs.url }}/company/contact-us
            ${{ inputs.url }}/consulting
            ${{ inputs.url }}/consulting/net-upgrade
            ${{ inputs.url }}/consulting/web-applications
            ${{ inputs.url }}/employment
            ${{ inputs.url }}/events/angular-superpowers-tour
            ${{ inputs.url }}/events/ai-workshop
            ${{ inputs.url }}/netug/sydney
            ${{ inputs.url }}/training/internship-fullstack

      - name: Azure CLI - Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR - Login
        run: |
          az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - name: Pull Docker image
        run: |
          docker pull ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}

      - name: Extract bundle analyze artifacts from Docker image
        run: |
          mkdir -p ./lighthouse-report
          docker create --name temp-container ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:pr-${{ github.event.number }}
          docker cp temp-container:/website/.lighthouseci ./lighthouse-report
          docker rm temp-container

      - name: Upload Lighthouse report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: ./lighthouse-report
      - name: Display Lighthouse Results as a Table
        id: lighthouse-results-generate
        run: |
          python scripts/generate-lighthouse-report.py

      - name: Comment on PR with Lighthouse insights
        uses: mshick/add-pr-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            ${{ steps.lighthouse-results-generate.outputs.report }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: true

      - name: Add Lighthouse Insights to Summary
        if: github.event_name != 'pull_request'
        run: |
          $report_content='${{ steps.lighthouse-results-generate.outputs.report }}'
          "$report_content" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append
