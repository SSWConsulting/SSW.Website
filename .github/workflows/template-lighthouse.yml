name: Template - Lighthouse Insights

on:
  workflow_call:
    inputs:
      url:
        type: string
        required: true

defaults:
  run:
    shell: pwsh

# TODO: Remove this as url will be passed from parent workflow
# Issue: https://github.com/SSWConsulting/SSW.Website/issues/3785
env:
  PROD_URL: "https://app-sswwebsite-9eb3.azurewebsites.net"

jobs:
  lighthouse-insights:
    name: Run Lighthouse Insights
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"

      # TODO: Remove steps that separate for production and make it generic for both workflows after markdown is committed to main
      # Issue: https://github.com/SSWConsulting/SSW.Website/issues/3785
      - name: Wait for Production slot to be available
        uses: jtalk/url-health-check-action@v4
        with:
          url: ${{ env.PROD_URL }}
          max-attempts: 5
          retry-delay: 40s

      - name: Generate URLs
        id: generate-urls
        uses: actions/github-script@v7
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const prodUrl = 'https://app-sswwebsite-9eb3.azurewebsites.net';
            const prUrl = process.env.GITHUB_EVENT_NAME === 'pull_request'
              ? `https://app-sswwebsite-9eb3-pr-${github.event.number}.azurewebsites.net`
              : '';

            const paths = [
              '',
              '/articles',
              '/company/about-us',
              '/company/clients',
              '/company/contact-us',
              '/consulting',
              '/consulting/net-upgrade',
              '/consulting/web-applications',
              '/employment',
              '/events/angular-superpowers-tour',
              '/events/ai-workshop',
              '/netug/sydney',
              '/training/internship-fullstack'
            ];

            // Generate production URLs
            const prodUrls = paths.map(path => prodUrl + path).join('\n');
            core.setOutput('prod_urls', prodUrls);

            // Generate PR URLs
            if (process.env.GITHUB_EVENT_NAME === 'pull_request') {
              const prUrls = paths.map(path => prUrl + path).join('\n');
              core.setOutput('pr_urls', prUrls);
            }

      - name: Audit Production site using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: ./.lighthouserc.json
          urls: |
            ${{ steps.generate-urls.outputs.prod_urls }}

      - name: Rename .lighthouseci folder to prod-lighthouseci
        run: |
          mv .lighthouseci prod-lighthouseci

      - name: Wait for PR slot to be available
        uses: jtalk/url-health-check-action@v4
        if: github.event_name == 'pull_request'
        with:
          url: ${{ inputs.url }}
          max-attempts: 5
          retry-delay: 40s

      - name: Audit PR slot using Lighthouse
        uses: treosh/lighthouse-ci-action@v12
        if: github.event_name == 'pull_request'
        with:
          configPath: ./.lighthouserc.json
          urls: |
            ${{ steps.generate-urls.outputs.pr_urls }}

      - name: Create production lighthouse report file and PR report comment
        id: lighthouse-results-generate
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
        run: |
          python scripts/generate-lighthouse-report.py

      - name: Comment on PR with Lighthouse insights
        uses: mshick/add-pr-comment@v2
        if: github.event_name == 'pull_request'
        with:
          message: |
            ${{ steps.lighthouse-results-generate.outputs.report }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          allow-repeats: true

      - name: Add Lighthouse Insights to Summary
        if: github.event_name != 'pull_request'
        run: |
          $report_content='${{ steps.lighthouse-results-generate.outputs.report }}'
          "$report_content" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

      - name: Commit lighthouse report to repo
        if: github.event_name != 'pull_request'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add prod-lighthouse-report.md
          git commit -m "Updated Lighthouse markdown report generated by workflow run: ${{ github.run_number }} [skip ci]" || true
          git push || true
          echo "âœ… Lighthouse report committed to the repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
