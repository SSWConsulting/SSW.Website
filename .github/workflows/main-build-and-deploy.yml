name: Main - build and deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: main

permissions:
  id-token: write
  contents: read

jobs:
  run-tests-and-coverage:
    name: Run tests & coverage
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 8
      - name: Install dependencies
        run: pnpm install

      - name: Run Tests & Coverage
        run: pnpm test-and-coverage --outputFile=coverage-report.json

      - name: Generate Coverage Report for main Build
        id: coverage
        uses: ArtiomTr/jest-coverage-report-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          coverage-file: coverage-report.json
          base-coverage-file: coverage-report.json
          skip-step: all
          annotations: none
          output: report-markdown

      - name: Code Coverage Summary
        shell: pwsh
        run: |
          $report_content='${{ steps.coverage.outputs.report }}'
          "$report_content" | Out-File -FilePath $env:GITHUB_STEP_SUMMARY -Append

  build:
    name: Build and upload artifacts
    uses: ./.github/workflows/template-build.yml
    with:
      tag: staging
    secrets: inherit

  deploy-staging:
    name: Deploy to staging slot
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}
    permissions:
      id-token: write
      contents: read
    outputs:
      url: ${{ steps.deploy.outputs.url }}
    steps:
      - uses: actions/checkout@v4

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./.github
          load-mode: strict

      - name: Deploy to staging
        id: deploy
        uses: ./.github/actions/deploy
        with:
          slot_name: staging
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_RESOURCE_GROUP: ${{ env.AZURE_RESOURCE_GROUP }}
          APP_SERVICE_NAME: ${{ env.APP_SERVICE_NAME }}
          ACR_LOGIN_SERVER: ${{ env.ACR_LOGIN_SERVER }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          AZURE_SERVICE_PRINCIPAL_OBJECT_ID: ${{ secrets.AZURE_SERVICE_PRINCIPAL_OBJECT_ID }}

  test:
    name: Run Playwright Tests
    needs: deploy-staging
    uses: ./.github/workflows/template-ui-tests.yml
    with:
      deploy_url: ${{ needs.deploy-staging.outputs.url }}
      tests_to_run: "images seo-main"

  swap-staging:
    name: Swap staging with production
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./.github
          load-mode: strict

      - name: Azure CLI - Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - run: |
          az webapp deployment slot swap \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --name ${{ env.APP_SERVICE_NAME }} \
            --slot staging \
            --target-slot production
        name: ♻️ Swap slots
