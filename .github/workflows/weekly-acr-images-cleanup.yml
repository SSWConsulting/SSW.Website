name: Weekly docker image cleanup

on:
  schedule:
    # Monday at 12 PM UTC - https://cron.help/#0_12_*_*_MON
    - cron: "0 12 * * MON"
  workflow_dispatch:
  pull_request:
    branches:
      - main

env:
  GH_TOKEN: ${{ github.token }}

defaults:
  run:
    shell: pwsh

permissions:
  id-token: write
  contents: read

jobs:
  check-acr-images:
    runs-on: ubuntu-latest
    outputs:
      imagesExistThatRequireDeletion: ${{ steps.comparision.outputs.imagesExistThatRequireDeletion }}

    steps:
      - name: Checking out
        uses: actions/checkout@v4

      - name: Load .env file
        uses: xom9ikk/dotenv@v2
        with:
          path: ./.github

      - name: Azure CLI - Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR - Login
        run: |
          az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - name: Get list of active PRs
        id: prList
        run: |
          $active_prs=$(gh pr list --state open --json number | jq -r '.[].number')
          echo "active_prs=$active_prs" >> $env:GITHUB_OUTPUT

      - name: Get list of acr images
        id: imageList
        run: |
          $images = az acr repository show-tags `
          --name ${{ env.ACR_NAME }} --repository ${{ env.IMAGE_NAME }} `
          --top 20 --orderby time_asc --output tsv
          # Filter tags that start with "pr-"
          $filteredTags = $images | Where-Object { $_ -like "pr-*" }
          # Remove the "pr-" prefix from filtered tags
          $filteredTagsWithoutPrefix = $filteredTags -replace "^pr-", ""
          echo "filteredTags=$filteredTagsWithoutPrefix" >> $env:GITHUB_OUTPUT
          Write-Output "$filteredTags"

      - name: Compare active PRs with existing docker images
        id: comparision
        run: |
          # Comparing the number of images and PRs
          $prList =  "${{ steps.PRList.outputs.active_prs }}" -split ' '
          $imageList = "${{ steps.imageList.outputs.filteredTags }}" -split ' '

          $imagesExistThatRequireDeletion = $imageList | Where-Object { $_ -notin $prList }
          $imagesNeedDeletion = $imagesExistThatRequireDeletion.Length -gt 0

          if ( ! $imagesNeedDeletion ) {
            echo "‚úÖ - Number of docker images are equal to number of active PRs - üèÉ Skipping next step"
          }
          else {
            echo "‚ùå - Number of docker images are not equal to number of active PRs"
            Write-Host "‚ö°- These images need to be deleted : $imagesExistThatRequireDeletion"
          }

  invokeDeleteImage:
    name: Invoking PR Close/Delete
    needs:
      - check-acr-images #Adding second check to avoid running this flow
    if: needs.check-acr-images.outputs.imagesExistThatRequireDeletion != ''
    uses: ./.github/workflows/delete-images.yml
    with:
      imageTags: ${{ toJson(needs.check-acr-images.outputs.imagesExistThatRequireDeletion) }}
    permissions:
      id-token: write
      contents: read
    secrets: inherit
